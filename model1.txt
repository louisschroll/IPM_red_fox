model{
    ## Population model
    for(a in 1:age_max){                   
      N[a, 1] ~ dcat(rep(1, 1001))
    }	
    
    # Project population
    for (t in 1:nyears){                          # t is index for years
      # Age class 0 (index = 1): local reproduction
      N[1, t+1] ~ dpois(surv_rate[1] * sum(fec_rate * N[1:age_max, t]))
      
      # Age classes 1 to 3 (indeces = 2, 3, 4): age classes 0, 1, and 2 survivors    
      for(a in 1:(age_max-2)){                   # a is index for age class
        N[a+1, t+1] ~ dbinom(surv_rate[a], N[a, t])
      }		
      
      # Age class 4+ (index = age_max = 5): age class 4 and 5+ survivors
      N[age_max, t+1] ~ dbinom(surv_rate[age_max], N[age_max-1, t] + N[age_max, t])
    }
  
    # DERIVED QUANTITIES
    for(t in 1:nyears){
      Ntot[t] <- sum(N[1:age_max, t])
    }
    
    
    ## Distance-sampling part
    # Prior distributions
    # beta0 ~ dunif(0,10)   # Intercept of lambda
    alpha0 ~ dunif(-10,10)  # Intercept of log(sigma)
    log(sigma) <- alpha0
    
    # Likelihood
    for (t in 1:nyears) {                          # t is index for years
      for (s in 1:nsites) {                        # s is index for sites
        
        # Model for abundance
        area_site[t, s] <- 2 * B * transect_len
        lambda[t, s] <- Ntot[t] * area_site[t, s] / size_study_area         # here lambda is defined depending on Ntot, derived from the population model
        N_ds[t, s] ~ dpois(lambda[t, s])               # Realized abundance at site s in year t
        site.probs[t, s] <- lambda[t, s] / sum(lambda[t, 1:nsites])  # Site probability
  
        # Detection model
        # log(sigma[t, s]) <- alpha0                  # Detection parameter (sigma) can vary by year and site
      }
    }
  
    # psi is a derived parameter under DA for stratified populations
    psi <- sum(lambda[1:nyears, 1:nsites]) / (nind + npseudo_ind)
      
    for (i in 1:(nind + npseudo_ind)) {                      # i is index for individuals
      z[i] ~ dbern(psi)                             # Data augmentation variables
      # year[i] ~ dcat(year.probs[1:nyears])          # Year assignment for each individual ??
      site[i] ~ dcat(site.probs[year[i], 1:nsites]) # Site assignment based on year-specific site probabilities
      d[i] ~ dunif(0, B)                            # Distance uniformly distributed
      p[i] <- exp(-d[i] * d[i] / (2 * sigma * sigma))  # Detection function sigma[year[i], site[i]]
      y[i] ~ dbern(z[i] * p[i])                     # Bernoulli random variable
  
    }
  
    # Derived parameter for total population size across all sites
    Ntotal_ds <- sum(z[1:(nind + npseudo_ind)])
    size_area_sampled <- nsites * 2 * B * transect_len
    D <- Ntotal_ds / size_area_sampled
    N_gic <- D * size_study_area
  }

